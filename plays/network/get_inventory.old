---
 - name: configure
   hosts: switch
   gather_facts: no

   vars_files:
    - /etc/ansible/vars/eol
    - /etc/ansible/vault
   tasks:

   - name: UPDATE INVENTORY
     command: python solarUpdate.py "svc.rundeck" "{{ vault_rundeckPass }}"
     delegate_to: localhost
     run_once: true

   - name: DEFINE CONNECTION
     set_fact:
       connection:
        timeout: 20
       fileOut: "/etc/ansible/output/master.csv"

   - name: GATHER IOS FACTS
     ios_facts:
       gather_subset: all


   - set_fact:
       stack_size: "{{ ansible_net_stacked_serialnums | length }}"
   - set_fact:
      eol_date: 'n/a'
   - set_fact:
      eol_date: "{{vars[ansible_facts['net_stacked_models'][0]]}}"
     when: ansible_facts['net_stacked_models'][0] in vars
#   - debug:
#      msg: "{{eol_date}}"
   - set_fact:
      csv_line: "{{ ansible_facts['net_hostname'] }},{{ ansible_facts['net_all_ipv4_addresses']| join(' ') }},{{ ansible_facts['net_serialnum'] }},{{ ansible_facts['net_stacked_models'][0] }},{{ ansible_facts['net_version']}}, {{stack_size}}, {{eol_date}} "

#   - set_fact:
#      csv_line: "{{ ansible_facts['net_hostname'] }},{{ ansible_facts['net_all_ipv4_addresses'][0] }},{{ ansible_facts['net_serialnum'] }},{{ ansible_facts['net_model'] }},{{ ansible_facts['net_version'] }},{{ ansible_facts['net_stacked_models']| join(' ') }}, {{ ansible_facts['net_stacked_serialnums']| join(' ') }}"
#     when: "'net_stacked_models' in ansible_facts"

#   - debug:
#       msg: "{{ ansible_facts }}"

   - name: CREATE INVENTORY FILE IF NONEXISTENT
     file:
       path: "{{ fileOut }}"
       state: touch
     run_once: yes
   - name: CREATE CSV HEADERS
     lineinfile:
       path: "{{ fileOut }}"
       line: "hostname,ip,serial,model,version,stack size"
       insertafter: HOF
     delegate_to: localhost

   - name: APPEND DATA
     lineinfile:
       dest: "{{ fileOut }}"
       line: "{{ csv_line }}"
       insertafter: EOF
     delegate_to: localhost
